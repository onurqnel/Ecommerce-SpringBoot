package com.ecommerce.project.model;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.validation.constraints.NotBlank;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

/**
 * The Category class represents a model for the category entity in the e-commerce application.
 * It is annotated with JPA and Lombok annotations to simplify database operations and boilerplate code.
 * This class contains two fields:
 * - categoryId: a unique identifier for each category, auto-generated by the database.
 * - categoryName: the name of the category.
 * <p>
 * Lombok annotations:
 * - @Data: Generates getters, setters, equals(), hashCode(), and toString() methods automatically.
 * - @NoArgsConstructor: Generates a no-argument constructor.
 * - @AllArgsConstructor: Generates a constructor with all fields as parameters.
 * <p>
 * JPA annotations:
 * - @Entity: Marks this class as a JPA entity, mapped to the "categories" table in the database.
 * - @Id: Specifies the primary key of the entity.
 * - @GeneratedValue: Configures the way the primary key is generated, using an auto-increment strategy (IDENTITY).
 */
@Entity(name = "categories")
@Data
@NoArgsConstructor
@AllArgsConstructor
public class Category {

    // The unique identifier for the category, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long categoryId;

    // The name of the category
    @NotBlank
    private String categoryName;
}
